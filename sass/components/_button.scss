// Use Pseudo class to style elements under a special condition ( Link is a special state of selector when its an ANCHOR elements )*/
.btn,
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s; // all the transition property  like in hover and active is going to happen
  position: relative;
  font-size: $default-font-size;

  //change for the button element
  border: none;
  cursor: pointer;
}

.btn--white {
  background-color: $color-white;
  color: $color-grey-dark;

  &::after {
    background-color: $color-white;
  }
}

.btn--green {
  background-color: $color-primary;
  color: #fff;

  &::after {
    background-color: $color-primary;
  }
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba($color-black, 0.2);

  &::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
}

.btn:active, 
.btn:focus {
  outline: none;
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba($color-black, 0.2);
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; // z-index defines the position of the elements if they are one top of another
  transition: all 0.4s;
}

.btn--animated {
  animation: moveInButtom 0.5s ease-out 0.75s; // the .7s was delay 
  animation-fill-mode: backwards;
}

.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: 1px solid $color-primary;
    padding: 3px;
    transition: all .2s;
  }

  &:hover{
    background-color: $color-primary;
    color: $color-white;
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateX(-2px);
  }

  &:active{
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0);
  }
}
